services:
  postgres:
    image: postgres:16-alpine
    container_name: camera-cloud-postgres
    environment:
      POSTGRES_DB: camera_cloud
      POSTGRES_USER: camera_user
      POSTGRES_PASSWORD: camera_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/main/resources/db/migration:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U camera_user -d camera_cloud"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: camera-cloud-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    container_name: camera-cloud-app
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/camera_cloud
      SPRING_DATASOURCE_USERNAME: camera_user
      SPRING_DATASOURCE_PASSWORD: camera_pass
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      ADMIN_PASSWORD: admin123
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data: